<project name="polyglot" default="dist-checklist" basedir=".">
	<description>
    Polyglot distribution build file
  </description>

	<!-- set global properties for this build -->

	<!-- source directory -->
	<property name="src" location="${basedir}/src"/>

	<!-- directory for class file targets -->
	<property name="classes" location="${basedir}/classes"/>

	<!-- directory for jar files -->
	<property name="lib" location="${basedir}/lib"/>

	<!-- distribution directory -->
	<property name="dist"  location="${basedir}/dist"/>

	<!-- binaries directory -->
	<property name="bin"  location="${basedir}/bin"/>

	<!-- tools directory -->
	<property name="tools.dir" location="${basedir}/tools"/>

	<!-- pth (Polyglot Test Harness) directory -->
	<property name="pth.dir"  location="${tools.dir}/pth"/>
	<property name="pth.classes"  location="${pth.dir}/classes"/>
	<property name="pth.src"  location="${pth.dir}/src"/>

	<!-- ppg (Polyglot Parser Generator) directory -->
	<property name="ppg.dir"  location="${tools.dir}/ppg"/>
	<property name="ppg.classes"  location="${ppg.dir}/classes"/>
	<property name="ppg.src"  location="${ppg.dir}/src"/>

	<!-- java_cup directory -->
	<property name="cup.dir"  location="${tools.dir}/java_cup"/>
	<property name="cup.classes" location="${cup.dir}/classes"/>
	<property name="cup.src" location="${cup.dir}/src"/>

	<!-- examples directory -->
	<property name="examples.dir" location="${basedir}/examples" />
	<property name="pao.dir" location="${examples.dir}/pao"/>
	<property name="coffer.dir" location="${examples.dir}/coffer"/>

	<!-- classpath to use when compiling polyglot -->
	<path id="standard.classpath">
		<pathelement location="${classes}"/>
		<pathelement location="${lib}/java_cup.jar"/>
		<pathelement location="${lib}/JFlex.jar"/>
		<pathelement location="${lib}/ppg.jar"/>
	</path>

	<!-- classpath to use when bootstrapping java_cup.jar -->
	<path id="cup.jar.classpath">
		<pathelement location="${cup.dir}/lib/java_cup.jar"/>
	</path>
	
	<target name="build">
		<ant antfile="${basedir}/build.xml" target="all"/>
        </target>

        <!-- do a cvs checkout into a tmp directory and run ant task there -->
        <target name="sub-ant-cvs">
          <antcall target="mkdir-tmp"/>
          <antcall target="cvs-checkout"/>
          <ant inheritAll="false" antfile="${basedir}/tmp/polyglot/dist.xml" dir="${basedir}/tmp/polyglot" target="${target}" />
        </target>

        <!-- generate a source tarball from CVS -->
        <target name="source-tarball-stable">
        </target>

        <target name="source-tarball-nightly">
        </target>

        <target name="source-tarball-epl-stable">
        </target>

        <target name="source-tarball-epl-nightly">
        </target>

        <target name="binary-jar-epl-stable">
        </target>

        <target name="binary-jar-epl-nightly">
        </target>

        <!-- make the LGPL source distribution and install into dist -->
        <target name="source-dist-actual">
          <antcall target="build"/>
          <antcall target="mkdir-dist"/>

		<copy todir="${dist}/lib" file="${lib}/polyglot.jar"/>

		<copy todir="${dist}/src/polyglot/ast" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/ast" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/frontend" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/frontend" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/lex" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/lex" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/main" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/main" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/parse" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/parse" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/qq" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/qq" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/types" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/types" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/util" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/util" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/visit" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/visit" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/ext/param" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/ext/param" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/skel" includeEmptyDirs="false">
			<fileset dir="skel"/>
		</copy>

		<copy todir="${dist}/tools/pth" includeEmptyDirs="false">
			<fileset dir="tools/pth"/>
		</copy>

		<copy todir="${dist}/tools/java_cup" includeEmptyDirs="false">
			<fileset dir="tools/java_cup"/>
		</copy>

		<copy todir="${dist}/tools/ppg" includeEmptyDirs="false">
			<fileset dir="tools/ppg"
        excludes="**/Makefile,**/tests/**/*.java,**/tests/**/*.class,**/tests/**/*.results"/>
		</copy>

		<copy todir="${dist}/tests" includeEmptyDirs="false">
			<fileset dir="tests" excludes="**/pthOutput*,**/*.java,**/*.java,**/*.results" />
		</copy>

		<copy todir="${dist}/tools" includeEmptyDirs="false">
			<fileset dir="tools"/>
		</copy>

		<copy todir="${dist}/examples/pao" includeEmptyDirs="false">
			<fileset dir="${pao.dir}" />
		</copy>

		<copy todir="${dist}/examples/coffer" includeEmptyDirs="false">
			<fileset dir="${coffer.dir}" />
		</copy>

		<copy file="${bin}/jlc" todir="${dist}/bin"/>
		<copy file="${bin}/pth" todir="${dist}/bin"/>
		<copy file="doc/Upgrade.txt" todir="${dist}/doc"/>
		<copy file="doc/Overview.txt" todir="${dist}/doc"/>
		<copy file="doc/ppg.html" todir="${dist}/doc"/>
		<copy file="${lib}/java_cup.jar" todir="${dist}/lib"/>
		<copy file="${lib}/JFlex.jar" todir="${dist}/lib"/>
		<copy file="build.xml" todir="${dist}"/>
		<copy file="README" todir="${dist}"/>
		<copy file="CHANGES" todir="${dist}"/>
		<copy file="LICENSE" todir="${dist}"/>
		<copy file="LICENSE.LGPL" todir="${dist}"/>
		<copy file="LICENSE.Eclipse" todir="${dist}"/>
        </target>

        <!-- make the EPL source distribution and install into dist -->
        <target name="source-dist-epl-actual">
          <antcall target="build"/>
          <antcall target="mkdir-dist"/>

		<copy todir="${dist}/src/polyglot/ast" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/ast" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/frontend" includeEmptyDirs="false">
                  <fileset dir="${src}/polyglot/frontend" excludes="**/Makefile,**/JLExtensionInfo.java"/>
		</copy>

		<copy todir="${dist}/src/polyglot/lex" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/lex" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/main" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/main" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/parse" includeEmptyDirs="false">
                  <fileset dir="${src}/polyglot/parse" excludes="**/Makefile,**/java12.cup,**/BaseParser.java,**/Grm.java,**/sym.java,**/Lexer_c.java,**/java.flex"/>
		</copy>

		<copy todir="${dist}/src/polyglot/qq" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/qq" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/types" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/types" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/util" includeEmptyDirs="false">
                  <fileset dir="${src}/polyglot/util" excludes="**/Makefile,**/typedump"/>
		</copy>

		<copy todir="${dist}/src/polyglot/visit" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/visit" excludes="**/Makefile"/>
		</copy>

		<copy todir="${dist}/src/polyglot/ext/param" includeEmptyDirs="false">
			<fileset dir="${src}/polyglot/ext/param" excludes="**/Makefile"/>
		</copy>

		<copy file="${bin}/jlc" todir="${dist}/bin"/>
		<copy file="build.xml" todir="${dist}"/>
		<copy file="README" todir="${dist}"/>
		<copy file="CHANGES" todir="${dist}"/>
		<copy file="LICENSE" todir="${dist}"/>
		<copy file="LICENSE.Eclipse" todir="${dist}"/>
        </target>

        <!-- make the LGPL binary distribution and install into dist -->
        <target name="bin-dist-actual">
          <antcall target="build"/>
          <antcall target="mkdir-dist"/>

    <!-- create a directory with the jar contents -->
    <antcall target="mkdir-tmp"/>

    <copy todir="${basedir}/tmp">
      <fileset dir="${basedir}/classes"
        includes="**/*.class"/>
        excludes="polyglot/parse/Grm.class,polyglot/parse/CUP$Grm$actions.class,polyglot/parse/sym.class,polyglot/parse/Lexer_c.class,polyglot/qq/**,polyglot/frontend/JLExtensionInfo.class,polyglot/parse/BaseParser.class" />
    </copy>

    <jar destfile="${basedir}/dist/polyglot.jar"
      basedir="${basedir}/tmp" />

    <antcall target="rmdir-tmp"/>
        </target>

        <!-- make the EPL binary distribution and install into dist -->
        <target name="bin-dist-epl-actual">
          <antcall target="build"/>
          <antcall target="mkdir-dist"/>

    <!-- create a directory with the jar contents -->
    <antcall target="mkdir-tmp"/>

    <copy todir="${basedir}/tmp">
      <fileset dir="${basedir}/classes"
        includes="**/*.class"
        excludes="polyglot/parse/Grm.class,polyglot/parse/CUP$Grm$actions.class,polyglot/parse/sym.class,polyglot/parse/Lexer_c.class,polyglot/qq/**,polyglot/frontend/JLExtensionInfo.class,polyglot/parse/BaseParser.class" />
    </copy>

    <jar destfile="${basedir}/dist/polyglot.jar"
      basedir="${basedir}/tmp" />

    <antcall target="rmdir-tmp"/>
        </target>

        <!-- make the Eclipse update distribution and install into dist -->
        <target name="eclipse-update-dist-actual">
          <antcall target="build"/>
          <antcall target="mkdir-dist"/>
          <antcall target="build-features"/>
          <antcall target="build-site"/>
          <antcall target="build-plugin"/>
        </target>

  <target name="build-site">
    <filter token="version" value="${version}"/>
    <copy tofile="${basedir}/dist/site.xml" file="${basedir}/eclipse/site.xml.in" filtering="true"/>
  </target>

  <target name="build-plugin">
    <mkdir dir="${basedir}/dist/plugins"/>

    <!-- create a directory with the jar contents -->
    <antcall target="mkdir-tmp"/>

    <copy todir="${basedir}/tmp">
      <fileset dir="${basedir}/classes"
        includes="**/*.class"
        excludes="polyglot/parse/Grm.class,polyglot/parse/CUP$Grm$actions.class,polyglot/parse/sym.class,polyglot/parse/Lexer_c.class,polyglot/qq/**,polyglot/frontend/JLExtensionInfo.class,polyglot/parse/BaseParser.class" />
    </copy>

    <copy todir="${basedir}/tmp/META-INF">
      <fileset dir="${basedir}/eclipse/META-INF"/>
    </copy>

    <jar destfile="${basedir}/dist/plugins/polyglot2_${version}.jar"
      basedir="${basedir}/tmp"
      manifest="META-INF/MANIFEST.MF"/>

    <antcall target="rmdir-tmp"/>
  </target>

  <target name="build-features">
    <filter token="version" value="${version}"/>
    <copy tofile="${basedir}/dist/feature.xml" file="${basedir}/eclipse/feature.xml.in" filtering="true"/>

    <mkdir dir="${basedir}/dist/features"/>

    <jar destfile="${basedir}/dist/features/polyglot2_${version}.jar"
      basedir="${basedir}/eclipse"
      includes="feature.xml" />
  </target>

	<target name="mkdir-tmp" depends="rmdir-tmp">
          <mkdir dir="${basedir}/tmp"/>
        </target>

	<target name="rmdir-tmp">
          <delete>
            <fileset dir="${basedir}/tmp" />
          </delete>
	</target>

	<target name="rmdir-dist">
          <delete>
            <fileset dir="${basedir}/dist" />
          </delete>
	</target>

	<!-- Create the distribution directory -->
	<target name="mkdir-dist" depends="rmdir-dist">
          <mkdir dir="${dist}"/>
	</target>
	
	<target name="dist-tmp">
			<property name="jl.version" value="${jl.version.major}.${jl.version.minor}.${jl.version.patch}"/>
		<delete>
			<fileset dir="${basedir}/polyglot-${jl.version}-src" />
		</delete>
		<delete>
			<fileset file="${basedir}/polyglot-${jl.version}-src.tar.gz" />
		</delete>
		<ant inheritAll="false" antfile="${basedir}/tmp/polyglot/dist.xml" dir="${basedir}/tmp/polyglot" target="jl-dist" />
		<copy tofile="${basedir}/polyglot-${jl.version}.jar" file="${basedir}/tmp/polyglot/dist/lib/polyglot.jar"/>
		<move tofile="${basedir}/polyglot-${jl.version}-src" file="${basedir}/tmp/polyglot/dist" />
		<tar destfile="${basedir}/polyglot-${jl.version}-src.tar.gz" basedir="${basedir}/polyglot-${jl.version}-src" compression="gzip" />
	</target>
	
	<target name="dist-epl-tmp">
			<property name="jl.version" value="${jl.version.major}.${jl.version.minor}.${jl.version.patch}"/>
		<copy tofile="${basedir}/polyglot-${jl.version}-epl-src" file="${basedir}/tmp/polyglot/src"
		exclude="polyglot/parse/java12.cup,polyglot/parser/BaseParser.java,polyglot/frontend/JLExtensionInfo.java"/>
		<tar destfile="${basedir}/polyglot-${jl.version}-epl-src.tar.gz" basedir="${basedir}/polyglot-${jl.version}-epl-src" compression="gzip" />
		<ant inheritAll="false" antfile="${basedir}/tmp/polyglot/eclipse/build.xml" dir="${basedir}/tmp/polyglot/eclipse" target="all"/>
		<copy tofile="${basedir}/polyglot2_${jl.version}.jar" file="${basedir}/tmp/polyglot/eclipse/dist/plugins/polyglot2_${jl.version}.jar" />
	</target>

	<target name="dist-nightly-tmp">
			<property name="jl.version" value="${jl.version.major}.${jl.version.minor}.${jl.version.patch}"/>
		<delete>
			<fileset dir="${basedir}/polyglot2" />
		</delete>
		<delete>
			<fileset file="${basedir}/polyglot-nightly.tar.gz" />
		</delete>
		<ant inheritAll="false" antfile="${basedir}/tmp/polyglot/dist.xml" dir="${basedir}/tmp/polyglot" target="jl-dist" />
		<move tofile="${basedir}/polyglot2" file="${basedir}/tmp/polyglot/dist" />
		<tar destfile="${basedir}/polyglot-nightly-src.tar.gz" basedir="${basedir}/polyglot2" compression="gzip" />
	</target>
	
	<target name="dist-nightly-epl-tmp">
			<property name="jl.version" value="${jl.version.major}.${jl.version.minor}.${jl.version.patch}"/>
		<delete>
			<fileset dir="${basedir}/polyglot2" />
		</delete>
		<delete>
			<fileset file="${basedir}/polyglot-nightly.tar.gz" />
		</delete>
		<ant inheritAll="false" antfile="${basedir}/tmp/polyglot/dist.xml" dir="${basedir}/tmp/polyglot" target="jl-dist" />
		<move tofile="${basedir}/polyglot2" file="${basedir}/tmp/polyglot/dist" />
		<tar destfile="${basedir}/polyglot-nightly-src.tar.gz" basedir="${basedir}/polyglot2" compression="gzip" />
	</target>

	<target name="dist-javadoc">
		<ant inheritAll="false" antfile="${dist}/build.xml" dir="${dist}" target="javadoc"/>
		<ant inheritAll="false" antfile="${dist}/build.xml" dir="${dist}" target="clobber"/>
	</target>

	<property name="cvs.root" value=":ext:nystrom@gforge.cis.cornell.edu:/cvsroot/polyglot" />

	<target name="cvs-checkout">
		<cvs command="checkout polyglot" quiet="true" cvsRsh="ssh" cvsRoot="${cvs.root}" dest="${basedir}/tmp" failonerror="true" />
	</target>

	<target name="dist-checklist">
		<echo>Builds and runs</echo>
		<echo>Examples build and run</echo>
		<echo>Regression tests successful</echo>
		<echo>CHANGES file up-to-date</echo>
		<echo>Version bump</echo>
	</target>


	<target name="gen-version">
		<echo file="${basedir}/src/polyglot/frontend/JLVersion.java">/*
 * This file is part of the Polyglot extensible compiler framework.
 *
 * Copyright (c) 2000-2007 Polyglot project group, Cornell University
 */
package polyglot.frontend;

/**
 * Version information for the base compiler.
 */
public class JLVersion extends polyglot.main.Version {
    public String name() { return "jl"; }
    public int major() { return ${jl.version.major}; }
    public int minor() { return ${jl.version.minor}; }
    public int patch_level() { return ${jl.version.patch}; }
}
</echo>
	</target>
</project>
